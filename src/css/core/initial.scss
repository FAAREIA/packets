@use "functions" as *;
@use "mixins" as *;
@use "variables" as *;

:root {
	@include declare-custom-property("bdrs", $border-radius);
	@include declare-custom-property("c", $color-scheme, "light");
	@include declare-custom-property("ff", $font-family);
	@include declare-custom-property("fz", $font-size);
	@include declare-custom-property("gd", $grid, "baseline");
	@include declare-custom-property("gd", $grid, "column-gap");
	@include declare-custom-property("gd", $grid, "column-width");
	@include declare-custom-property("gd", $grid, "row-gap");
	@include declare-custom-property("z", $z-index);
	font-size: var(--fz--root);
}

::selection {
	background: var(--c--blue);
	color: white;
}

a {
	color: var(--c--link);
	&:focus,
	&:hover {
	}
}

body {
	color: var(--c--text);
	font: 500 var(--fz--text)/var(--gd--baseline) var(--ff--text);
	&.no-scroll {
		overflow: hidden;
	}
}

#header {
	background: var(--c--blue);
	padding-block-end: 1.2rem;
	padding-block-start: 1.2rem;
	.grid {
		column-gap: var(--i-header--cg, 2rem);
		grid-template-areas: var(--i-header--gta, "logo search burger");
		grid-template-columns: var(--i-header--gtc, 1fr);
	}
}

img {
	display: block;
}

.grid {
	display: grid;
	gap: var(--gd--row-gap) var(--gd--column-gap);
	&.max-inline-size {
		box-sizing: border-box;
		margin-inline-end: auto;
		margin-inline-start: auto;
		max-inline-size: 128rem;
		padding-inline-end: 2rem;
		padding-inline-start: 2rem;
	}
	&.fluid {
		column-gap: var(--gd--column-gap);
    	grid-template-columns: var(--grid--gtc, 0 [content-start] repeat(var(--gd--columns), 1fr) [content-end] 0);
	}
}

.h1,
h1 {
	font-size: var(--fz--h1);
	line-height: null;
}

.h2,
h2 {
	font-size: var(--fz--h2);
	line-height: 1;
}

.h3,
h3 {
	font-size: var(--fz--h3);
	line-height: 1;
}

.heading,
dt,
h1,
h2,
h3,
legend,
th {
	color: var(--c--header);
	font-family: var(--ff--header);
	font-weight: 700;
	a {
		color: inherit;
	}
}
